---
## Next, we use a Certificate resource to tell cert-manager how to create
## the Linkerd trust anchor certificate. Again, this is in the cert-manager
## namespace, because we really, really don't want its private key visible
## anywhere else in the cluster. 
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: linkerd-trust-anchor
  namespace: cert-manager
spec:
  # Set the common name of the subject.
  commonName: root.linkerd.cluster.local
  ## This is itself a CA certificate...
  isCA: true
  usages:
  - cert sign
  - crl sign
  - server auth
  - client auth
  ## ...and it's explicitly good for 30 days, so make sure to renew it
  ## no more than 15 days after it's issued.
  duration: 720h
  renewBefore: 360h
  ## It must be issued (signed) by trust anchor ClusterIssuer.
  issuerRef:
    name: cert-manager-ca-root
    kind: ClusterIssuer
    group: cert-manager.io
  # It uses a 256-bit ECDSA private key...
  privateKey:
    algorithm: ECDSA
  # ...and the private key will be stored in this Secret.
  secretName: linkerd-trust-anchor
---
## Finally, create a ClusterIssuer that will use the Linkerd trust anchor
## certificate above to sign requests. We'll use this for the Linkerd
## issuer certificate.
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: linkerd-trust-anchor
  namespace: cert-manager
spec:
  ca:
    secretName: linkerd-trust-anchor
